/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ (function() {

eval("document.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n  const accordion = () => {\r\n    const items = document.querySelectorAll(\".accordion__item-trigger\");\r\n\r\n    items.forEach(item => {\r\n      item.addEventListener(\"click\", () => {\r\n        const parent = item.parentNode;\r\n\r\n        if (parent.classList.contains(\"accordion__item-active\")) {\r\n          parent.classList.remove(\"accordion__item-active\");\r\n        } else {\r\n          document\r\n            .querySelectorAll(\".accordion__item\")\r\n            .forEach(child => {\r\n              child.classList.remove(\"accordion__item-active\")\r\n            });\r\n\r\n          parent.classList.add(\"accordion__item-active\");\r\n        }\r\n      })\r\n    })\r\n  };\r\n\r\n  accordion();\r\n\r\n  const bindModal = (trigger, modal, close) => {\r\n    trigger = document.querySelector(trigger);\r\n    modal = document.querySelector(modal);\r\n    close = document.querySelector(close);\r\n\r\n    trigger.addEventListener(\"click\", event => {\r\n      event.preventDefault();\r\n      modal.style.display = \"flex\";\r\n    });\r\n\r\n    close.addEventListener(\"click\", () => {\r\n      modal.style.display = \"none\";\r\n    });\r\n\r\n    modal.addEventListener(\"click\", event => {\r\n      event.target === modal ?\r\n        modal.style.display = \"none\" :\r\n        null;\r\n    });\r\n  }\r\n\r\n  bindModal(\".modal__btn\", \".modal__wrapper\", \".modal__close\");\r\n\r\n  new Swiper(\".swiper-container\", {\r\n    spaceBetween: 20,\r\n    loop: true,\r\n\r\n    navigation: {\r\n      nextEl: \".arrow__btn-next\",\r\n      prevEl: \".arrow__btn-prev\",\r\n    },\r\n\r\n    breakpoints: {\r\n      320: { slidesPerView: 1 },\r\n      768: { slidesPerView: 2 }\r\n    },\r\n\r\n  });\r\n\r\n  const element = document.querySelector(\".phone__input\");\r\n\r\n  const maskOption = {\r\n    mask: \"+{3}(000)000-00-00\"\r\n  };\r\n\r\n  IMask(element, maskOption);\r\n\r\n  new SmoothScroll(\"a[href*='#']\");\r\n\r\n  const changeCursor = () => {\r\n    const cursor = document.querySelector(\".cursor\");\r\n    const follower = document.querySelector(\".follower\");\r\n    const links = document.querySelectorAll(\".link\");\r\n\r\n    let posX = 0, posY = 0;\r\n    let mouseX = 0, mouseY = 0;\r\n\r\n    TweenMax.to({}, 0.01, {\r\n      repeat: -1,\r\n      onRepeat: () => {\r\n\r\n        posX += (mouseX - posX) / 5;\r\n        posY += (mouseY - posY) / 5;\r\n\r\n        TweenMax.set(cursor, {\r\n          css: {\r\n            top: mouseY,\r\n            left: mouseX,\r\n          }\r\n        });\r\n\r\n        TweenMax.set(follower, {\r\n          css: {\r\n            top: posY - 12,\r\n            left: posX - 12,\r\n          }\r\n        });\r\n      }\r\n    })\r\n\r\n    window.addEventListener(\"mousemove\", event => {\r\n      mouseX = event.clientX;\r\n      mouseY = event.clientY;\r\n    });\r\n\r\n    links.forEach(link => {\r\n      link.addEventListener(\"mouseenter\", () => {\r\n        cursor.classList.add(\"active\");\r\n        follower.classList.add(\"active\");\r\n      });\r\n      link.addEventListener(\"mouseleave\", () => {\r\n        cursor.classList.remove(\"active\");\r\n        follower.classList.remove(\"active\");\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  changeCursor();\r\n\r\n\r\n  const tabsHeader = document.querySelectorAll(\".tabs__header-item\");\r\n  const tabContent = document.querySelectorAll(\".tabs__content-item\");\r\n\r\n  tabsHeader.forEach(tabHeader => {\r\n    tabHeader.addEventListener(\"click\", ({ target }) => {\r\n      for (let i = 0; i < tabsHeader.length; i++) {\r\n        if (target === tabsHeader[i]) {\r\n          tabContent[i].classList.add(\"active\");\r\n          tabsHeader[i].classList.add(\"active\");\r\n        } else {\r\n          tabContent[i].classList.remove(\"active\");\r\n          tabsHeader[i].classList.remove(\"active\");\r\n        }\r\n      };\r\n    });\r\n  });\r\n\r\n  const menu = document.querySelector(\".menu__list\");\r\n  const menuItems = document.querySelectorAll(\".menu__list-item\");\r\n  const burger = document.querySelector(\".burger\");\r\n\r\n  burger.addEventListener(\"click\", () => {\r\n    burger.classList.toggle(\"active\");\r\n    menu.classList.toggle(\"active\");\r\n  });\r\n\r\n  menuItems.forEach(item => {\r\n    item.addEventListener(\"click\", () => {\r\n      burger.classList.toggle(\"active\");\r\n      menu.classList.toggle(\"active\");\r\n    });\r\n  })\r\n\r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvYXBwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0IsYUFBYTtBQUNiLEtBQUs7QUFDTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsRUFBRTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFFBQVE7QUFDbkQsc0JBQXNCLHVCQUF1QjtBQUM3QztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlyLXN0YXJ0Ly4vc3JjL2pzL2FwcC5qcz85MGU5Il0sInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcclxuXHJcbiAgY29uc3QgYWNjb3JkaW9uID0gKCkgPT4ge1xyXG4gICAgY29uc3QgaXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmFjY29yZGlvbl9faXRlbS10cmlnZ2VyXCIpO1xyXG5cclxuICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICBjb25zdCBwYXJlbnQgPSBpdGVtLnBhcmVudE5vZGU7XHJcblxyXG4gICAgICAgIGlmIChwYXJlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYWNjb3JkaW9uX19pdGVtLWFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgcGFyZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJhY2NvcmRpb25fX2l0ZW0tYWN0aXZlXCIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBkb2N1bWVudFxyXG4gICAgICAgICAgICAucXVlcnlTZWxlY3RvckFsbChcIi5hY2NvcmRpb25fX2l0ZW1cIilcclxuICAgICAgICAgICAgLmZvckVhY2goY2hpbGQgPT4ge1xyXG4gICAgICAgICAgICAgIGNoaWxkLmNsYXNzTGlzdC5yZW1vdmUoXCJhY2NvcmRpb25fX2l0ZW0tYWN0aXZlXCIpXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgIHBhcmVudC5jbGFzc0xpc3QuYWRkKFwiYWNjb3JkaW9uX19pdGVtLWFjdGl2ZVwiKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gIH07XHJcblxyXG4gIGFjY29yZGlvbigpO1xyXG5cclxuICBjb25zdCBiaW5kTW9kYWwgPSAodHJpZ2dlciwgbW9kYWwsIGNsb3NlKSA9PiB7XHJcbiAgICB0cmlnZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0cmlnZ2VyKTtcclxuICAgIG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihtb2RhbCk7XHJcbiAgICBjbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY2xvc2UpO1xyXG5cclxuICAgIHRyaWdnZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcclxuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY2xvc2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgfSk7XHJcblxyXG4gICAgbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGV2ZW50ID0+IHtcclxuICAgICAgZXZlbnQudGFyZ2V0ID09PSBtb2RhbCA/XHJcbiAgICAgICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiIDpcclxuICAgICAgICBudWxsO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBiaW5kTW9kYWwoXCIubW9kYWxfX2J0blwiLCBcIi5tb2RhbF9fd3JhcHBlclwiLCBcIi5tb2RhbF9fY2xvc2VcIik7XHJcblxyXG4gIG5ldyBTd2lwZXIoXCIuc3dpcGVyLWNvbnRhaW5lclwiLCB7XHJcbiAgICBzcGFjZUJldHdlZW46IDIwLFxyXG4gICAgbG9vcDogdHJ1ZSxcclxuXHJcbiAgICBuYXZpZ2F0aW9uOiB7XHJcbiAgICAgIG5leHRFbDogXCIuYXJyb3dfX2J0bi1uZXh0XCIsXHJcbiAgICAgIHByZXZFbDogXCIuYXJyb3dfX2J0bi1wcmV2XCIsXHJcbiAgICB9LFxyXG5cclxuICAgIGJyZWFrcG9pbnRzOiB7XHJcbiAgICAgIDMyMDogeyBzbGlkZXNQZXJWaWV3OiAxIH0sXHJcbiAgICAgIDc2ODogeyBzbGlkZXNQZXJWaWV3OiAyIH1cclxuICAgIH0sXHJcblxyXG4gIH0pO1xyXG5cclxuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5waG9uZV9faW5wdXRcIik7XHJcblxyXG4gIGNvbnN0IG1hc2tPcHRpb24gPSB7XHJcbiAgICBtYXNrOiBcIit7M30oMDAwKTAwMC0wMC0wMFwiXHJcbiAgfTtcclxuXHJcbiAgSU1hc2soZWxlbWVudCwgbWFza09wdGlvbik7XHJcblxyXG4gIG5ldyBTbW9vdGhTY3JvbGwoXCJhW2hyZWYqPScjJ11cIik7XHJcblxyXG4gIGNvbnN0IGNoYW5nZUN1cnNvciA9ICgpID0+IHtcclxuICAgIGNvbnN0IGN1cnNvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY3Vyc29yXCIpO1xyXG4gICAgY29uc3QgZm9sbG93ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvbGxvd2VyXCIpO1xyXG4gICAgY29uc3QgbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmxpbmtcIik7XHJcblxyXG4gICAgbGV0IHBvc1ggPSAwLCBwb3NZID0gMDtcclxuICAgIGxldCBtb3VzZVggPSAwLCBtb3VzZVkgPSAwO1xyXG5cclxuICAgIFR3ZWVuTWF4LnRvKHt9LCAwLjAxLCB7XHJcbiAgICAgIHJlcGVhdDogLTEsXHJcbiAgICAgIG9uUmVwZWF0OiAoKSA9PiB7XHJcblxyXG4gICAgICAgIHBvc1ggKz0gKG1vdXNlWCAtIHBvc1gpIC8gNTtcclxuICAgICAgICBwb3NZICs9IChtb3VzZVkgLSBwb3NZKSAvIDU7XHJcblxyXG4gICAgICAgIFR3ZWVuTWF4LnNldChjdXJzb3IsIHtcclxuICAgICAgICAgIGNzczoge1xyXG4gICAgICAgICAgICB0b3A6IG1vdXNlWSxcclxuICAgICAgICAgICAgbGVmdDogbW91c2VYLFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBUd2Vlbk1heC5zZXQoZm9sbG93ZXIsIHtcclxuICAgICAgICAgIGNzczoge1xyXG4gICAgICAgICAgICB0b3A6IHBvc1kgLSAxMixcclxuICAgICAgICAgICAgbGVmdDogcG9zWCAtIDEyLFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG5cclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIGV2ZW50ID0+IHtcclxuICAgICAgbW91c2VYID0gZXZlbnQuY2xpZW50WDtcclxuICAgICAgbW91c2VZID0gZXZlbnQuY2xpZW50WTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxpbmtzLmZvckVhY2gobGluayA9PiB7XHJcbiAgICAgIGxpbmsuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgKCkgPT4ge1xyXG4gICAgICAgIGN1cnNvci5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIGZvbGxvd2VyLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XHJcbiAgICAgIH0pO1xyXG4gICAgICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsICgpID0+IHtcclxuICAgICAgICBjdXJzb3IuY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcclxuICAgICAgICBmb2xsb3dlci5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICB9O1xyXG5cclxuICBjaGFuZ2VDdXJzb3IoKTtcclxuXHJcblxyXG4gIGNvbnN0IHRhYnNIZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRhYnNfX2hlYWRlci1pdGVtXCIpO1xyXG4gIGNvbnN0IHRhYkNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnRhYnNfX2NvbnRlbnQtaXRlbVwiKTtcclxuXHJcbiAgdGFic0hlYWRlci5mb3JFYWNoKHRhYkhlYWRlciA9PiB7XHJcbiAgICB0YWJIZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICh7IHRhcmdldCB9KSA9PiB7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFic0hlYWRlci5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmICh0YXJnZXQgPT09IHRhYnNIZWFkZXJbaV0pIHtcclxuICAgICAgICAgIHRhYkNvbnRlbnRbaV0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICAgIHRhYnNIZWFkZXJbaV0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGFiQ29udGVudFtpXS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgdGFic0hlYWRlcltpXS5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuICBjb25zdCBtZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tZW51X19saXN0XCIpO1xyXG4gIGNvbnN0IG1lbnVJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubWVudV9fbGlzdC1pdGVtXCIpO1xyXG4gIGNvbnN0IGJ1cmdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYnVyZ2VyXCIpO1xyXG5cclxuICBidXJnZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIGJ1cmdlci5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xyXG4gICAgbWVudS5jbGFzc0xpc3QudG9nZ2xlKFwiYWN0aXZlXCIpO1xyXG4gIH0pO1xyXG5cclxuICBtZW51SXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgYnVyZ2VyLmNsYXNzTGlzdC50b2dnbGUoXCJhY3RpdmVcIik7XHJcbiAgICAgIG1lbnUuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcclxuICAgIH0pO1xyXG4gIH0pXHJcblxyXG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/app.js\n");

/***/ }),

/***/ "./src/js/canvas.js":
/*!**************************!*\
  !*** ./src/js/canvas.js ***!
  \**************************/
/***/ (function() {

eval("const canvasApp = () => {\r\n\r\n  var theCanvas = document.getElementById(\"canvasOne\");\r\n  var context = theCanvas.getContext(\"2d\");\r\n\r\n  var displayWidth;\r\n  var displayHeight;\r\n  var wait;\r\n  var count;\r\n  var numToAddEachFrame;\r\n  var particleList;\r\n  var recycleBin;\r\n  var particleAlpha;\r\n  var fLen;\r\n  var m;\r\n  var projCenterX;\r\n  var projCenterY;\r\n  var zMax;\r\n  var turnAngle;\r\n  var turnSpeed;\r\n  var sphereRad, sphereCenterY, sphereCenterZ;\r\n  var particleRad;\r\n  var zeroAlphaDepth;\r\n  var randAccelX, randAccelY, randAccelZ;\r\n  var gravity;\r\n  var rgbString;\r\n  //we are defining a lot of variables used in the screen update functions globally so that they don't have to be redefined every frame.\r\n  var outsideTest;\r\n  var nextParticle;\r\n  var sinAngle;\r\n  var cosAngle;\r\n  var rotX, rotZ;\r\n  var depthAlphaFactor;\r\n  var i;\r\n  var theta, phi;\r\n  var x0, y0, z0;\r\n\r\n\r\n  const onTimer = () => {\r\n    //if enough time has elapsed, we will add new particles.\t\t\r\n    count++;\r\n    if (count >= wait) {\r\n\r\n      count = 0;\r\n      for (i = 0; i < numToAddEachFrame; i++) {\r\n        theta = Math.random() * 2 * Math.PI;\r\n        phi = Math.acos(Math.random() * 2 - 1);\r\n        x0 = sphereRad * Math.sin(phi) * Math.cos(theta);\r\n        y0 = sphereRad * Math.sin(phi) * Math.sin(theta);\r\n        z0 = sphereRad * Math.cos(phi);\r\n\r\n        //We use the addParticle function to add a new particle. The parameters set the position and velocity components.\r\n        //Note that the velocity parameters will cause the particle to initially fly outwards away from the sphere center (after\r\n        //it becomes unstuck).\r\n        var p = addParticle(x0, sphereCenterY + y0, sphereCenterZ + z0, 0.002 * x0, 0.002 * y0, 0.002 * z0);\r\n\r\n        //we set some \"envelope\" parameters which will control the evolving alpha of the particles.\r\n        p.attack = 50;\r\n        p.hold = 50;\r\n        p.decay = 160;\r\n        p.initValue = 0;\r\n        p.holdValue = particleAlpha;\r\n        p.lastValue = 0;\r\n\r\n        //the particle will be stuck in one place until this time has elapsed:\r\n        p.stuckTime = 80 + Math.random() * 20;\r\n\r\n        p.accelX = 0;\r\n        p.accelY = gravity;\r\n        p.accelZ = 0;\r\n      }\r\n    }\r\n\r\n    //update viewing angle\r\n    turnAngle = (turnAngle + turnSpeed) % (2 * Math.PI);\r\n    sinAngle = Math.sin(turnAngle);\r\n    cosAngle = Math.cos(turnAngle);\r\n\r\n    //background fill\r\n    context.fillStyle = \"#1f1f1f\";\r\n    context.fillRect(0, 0, displayWidth, displayHeight);\r\n\r\n    //update and draw particles\r\n    p = particleList.first;\r\n    while (p != null) {\r\n      //before list is altered record next particle\r\n      nextParticle = p.next;\r\n\r\n      //update age\r\n      p.age++;\r\n\r\n      //if the particle is past its \"stuck\" time, it will begin to move.\r\n      if (p.age > p.stuckTime) {\r\n        p.velX += p.accelX + randAccelX * (Math.random() * 2 - 1);\r\n        p.velY += p.accelY + randAccelY * (Math.random() * 2 - 1);\r\n        p.velZ += p.accelZ + randAccelZ * (Math.random() * 2 - 1);\r\n\r\n        p.x += p.velX;\r\n        p.y += p.velY;\r\n        p.z += p.velZ;\r\n      }\r\n\r\n      /*\r\n      We are doing two things here to calculate display coordinates.\r\n      The whole display is being rotated around a vertical axis, so we first calculate rotated coordinates for\r\n      x and z (but the y coordinate will not change).\r\n      Then, we take the new coordinates (rotX, y, rotZ), and project these onto the 2D view plane.\r\n      */\r\n      rotX = cosAngle * p.x + sinAngle * (p.z - sphereCenterZ);\r\n      rotZ = -sinAngle * p.x + cosAngle * (p.z - sphereCenterZ) + sphereCenterZ;\r\n      m = fLen / (fLen - rotZ);\r\n      p.projX = rotX * m + projCenterX;\r\n      p.projY = p.y * m + projCenterY;\r\n\r\n      //update alpha according to envelope parameters.\r\n      if (p.age < p.attack + p.hold + p.decay) {\r\n        if (p.age < p.attack) {\r\n          p.alpha = (p.holdValue - p.initValue) / p.attack * p.age + p.initValue;\r\n        }\r\n        else if (p.age < p.attack + p.hold) {\r\n          p.alpha = p.holdValue;\r\n        }\r\n        else if (p.age < p.attack + p.hold + p.decay) {\r\n          p.alpha = (p.lastValue - p.holdValue) / p.decay * (p.age - p.attack - p.hold) + p.holdValue;\r\n        }\r\n      }\r\n      else {\r\n        p.dead = true;\r\n      }\r\n\r\n      //see if the particle is still within the viewable range.\r\n      if ((p.projX > displayWidth) || (p.projX < 0) || (p.projY < 0) || (p.projY > displayHeight) || (rotZ > zMax)) {\r\n        outsideTest = true;\r\n      }\r\n      else {\r\n        outsideTest = false;\r\n      }\r\n\r\n      if (outsideTest || p.dead) {\r\n        recycle(p);\r\n      }\r\n\r\n      else {\r\n        //depth-dependent darkening\r\n        depthAlphaFactor = (1 - rotZ / zeroAlphaDepth);\r\n        depthAlphaFactor = (depthAlphaFactor > 1) ? 1 : ((depthAlphaFactor < 0) ? 0 : depthAlphaFactor);\r\n        context.fillStyle = rgbString + depthAlphaFactor * p.alpha + \")\";\r\n\r\n        //draw\r\n        context.beginPath();\r\n        context.arc(p.projX, p.projY, m * particleRad, 0, 2 * Math.PI, false);\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n\r\n      p = nextParticle;\r\n    }\r\n  };\r\n\r\n  const addParticle = (x0, y0, z0, vx0, vy0, vz0) => {\r\n    var newParticle;\r\n\r\n    //check recycle bin for available drop:\r\n    if (recycleBin.first != null) {\r\n      newParticle = recycleBin.first;\r\n      //remove from bin\r\n      if (newParticle.next != null) {\r\n        recycleBin.first = newParticle.next;\r\n        newParticle.next.prev = null;\r\n      }\r\n      else {\r\n        recycleBin.first = null;\r\n      }\r\n    }\r\n    //if the recycle bin is empty, create a new particle (a new ampty object):\r\n    else {\r\n      newParticle = {};\r\n    }\r\n\r\n    //add to beginning of particle list\r\n    if (particleList.first == null) {\r\n      particleList.first = newParticle;\r\n      newParticle.prev = null;\r\n      newParticle.next = null;\r\n    }\r\n    else {\r\n      newParticle.next = particleList.first;\r\n      particleList.first.prev = newParticle;\r\n      particleList.first = newParticle;\r\n      newParticle.prev = null;\r\n    }\r\n\r\n    //initialize\r\n    newParticle.x = x0;\r\n    newParticle.y = y0;\r\n    newParticle.z = z0;\r\n    newParticle.velX = vx0;\r\n    newParticle.velY = vy0;\r\n    newParticle.velZ = vz0;\r\n    newParticle.age = 0;\r\n    newParticle.dead = false;\r\n    if (Math.random() < 0.5) {\r\n      newParticle.right = true;\r\n    }\r\n    else {\r\n      newParticle.right = false;\r\n    }\r\n    return newParticle;\r\n  }\r\n\r\n  const recycle = (p) => {\r\n    //remove from particleList\r\n    if (particleList.first == p) {\r\n      if (p.next != null) {\r\n        p.next.prev = null;\r\n        particleList.first = p.next;\r\n      }\r\n      else {\r\n        particleList.first = null;\r\n      }\r\n    }\r\n    else {\r\n      if (p.next == null) {\r\n        p.prev.next = null;\r\n      }\r\n      else {\r\n        p.prev.next = p.next;\r\n        p.next.prev = p.prev;\r\n      }\r\n    }\r\n    //add to recycle bin\r\n    if (recycleBin.first == null) {\r\n      recycleBin.first = p;\r\n      p.prev = null;\r\n      p.next = null;\r\n    }\r\n    else {\r\n      p.next = recycleBin.first;\r\n      recycleBin.first.prev = p;\r\n      recycleBin.first = p;\r\n      p.prev = null;\r\n    }\r\n  };\r\n\r\n  const init = () => {\r\n    wait = 1;\r\n    count = wait - 1;\r\n    numToAddEachFrame = 8;\r\n\r\n    rgbString = \"rgba(\" + 255 + \",\" + 255 + \",\" + 255 + \",\"; //partial string for color which will be completed by appending alpha value.\r\n    particleAlpha = 1; //maximum alpha\r\n\r\n    displayWidth = theCanvas.width;\r\n    displayHeight = theCanvas.height;\r\n\r\n    fLen = 320; //represents the distance from the viewer to z=0 depth.\r\n\r\n    //projection center coordinates sets location of origin\r\n    projCenterX = displayWidth / 2;\r\n    projCenterY = displayHeight / 2;\r\n\r\n    //we will not draw coordinates if they have too large of a z-coordinate (which means they are very close to the observer).\r\n    zMax = fLen - 2;\r\n\r\n    particleList = {};\r\n    recycleBin = {};\r\n\r\n    //random acceleration factors - causes some random motion\r\n    randAccelX = 0.1;\r\n    randAccelY = 0.1;\r\n    randAccelZ = 0.1;\r\n\r\n    gravity = 0; //try changing to a positive number (not too large, for example 0.3), or negative for floating upwards.\r\n\r\n    particleRad = 2.5;\r\n    sphereRad = 280;\r\n    sphereCenterX = 0;\r\n    sphereCenterY = 0;\r\n    sphereCenterZ = -3 - sphereRad;\r\n\r\n    //alpha values will lessen as particles move further back, causing depth-based darkening:\r\n    zeroAlphaDepth = -750;\r\n\r\n    turnSpeed = 2 * Math.PI / 1600; //the sphere will rotate at this speed (one complete rotation every 1600 frames).\r\n    turnAngle = 0; //initial angle\r\n\r\n    timer = setInterval(onTimer, 1000 / 24);\r\n  }\r\n\r\n  init();\r\n};\r\n\r\nconst windowLoadHandler = () => {\r\n  canvasApp();\r\n};\r\n\r\nwindow.addEventListener(\"load\", windowLoadHandler, false);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/canvas.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/js/app.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/canvas.js"]();
/******/ 	
/******/ })()
;